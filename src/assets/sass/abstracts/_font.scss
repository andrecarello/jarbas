//
// Author: OSTON <ti@oston.io>
// Name: Stories
// File: font.scss
// Location: @/assets/sass/abstract
//

@mixin text-style($style, $color: 'null') {
	@if quote(type-of($style)) == 'map' {
		@each $property, $value in $style {
			@include __font-style($property, $value);
		}
	}

	@if type-of($color) == 'list' {
		@include text-color(nth($color, 1), nth($color, 2));
	} @else {
		@include text-color($color);
	}
}

@mixin text-color($color, $opacity: 1) {
	@if $opacity < 1 {
		color: rgba(color($color), $opacity);
	} @else {
		color: color($color);
	}
}

@mixin __font-style($property, $value) {
	// TEXT: transform, variant, align, decoration, shadow
	$text: (transform, variant, align, decoration, shadow);
	// FONT: size, family, weight
	$font: (size, family, weight, style);
	// LETTER: spacing
	// $letter: (spacing);
	// LINE: height
	// $line: (height);

	@each $prop in $text {
		@if $property == $prop {
			text-#{$property}: $value;
		}
	}

	@each $prop in $font {
		@if $prop == $property {
			@if $property == 'size' {
				font-#{$property}: rem($value);
			} @else if $property == 'family' {
				@include font($value);
			} @else {
				@if $property == $prop {
					font-#{$property}: $value;
				}
			}
		}
	}

	@if quote($property) == 'spacing' {
		letter-spacing: rem($value);
	} @else if quote($property) == 'height' {
		line-height: rem($value);
	} @else if quote($property) == 'white-space' or quote($property) == 'writing-mode' {
    #{$property}: $value
  }
}

@mixin __set-style($property, $value) {
	font-#{$property}: $value;
}
